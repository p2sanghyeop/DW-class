src=소스파일

메소드에 대해서
1. 메소드(함수, 기능)
- 메소드를 이용해 기능을 나눌수 있음
-> 각 기능을 분리해서 개발해야 소프트웨어 품질 향상
ex) 로봇 팔, 다리
(응집도 높고 결합도는 낮아야 좋은 소프트웨어)
2. 메인 : 자바에서 먼저 실행되는 기능(함수)
static이 붙은 함수에는 static함수만 올수 있다.
3. 접근 지정자(객체지향언어는 대부분 평균4개)
(public, private, protected)+디폴트 접근지정자
public
private
protected
디폴트 접근지정자
4. 문법
*함수이름은 동사
<접근지정자> <리턴타입> <함수이름> <인자값>
            데이터 타입 동사       데이터타입
인자값에는 최대 3개까지만 온다
인자값을 부르는 용어 (인자값, 파라미터값)
public int getSum (int x, int y) {
       int Sum = 10; 
       return SUm;
    리턴타입이 int형이면
    int형 데이터를 반환(return) 해야함
}
리턴방법
1. 변수를 만들어서 리턴하는 방법
2. 문자를 바로 리턴하는 방법

//() : 인자 or 파라미터
public static int 성적계산(int 국어점수, int 수학점수) {
		int sum = 국어점수 + 수학점수;
		return sum;
	}
	
	//java는 main함수부터 실행
	public static void main(String[] args) {
		int 수학점수 = 100;
		int 국어점수 = 0;
		int 총합 = 성적계산(국어점수, 수학점수);
		System.out.println(총합);
	}
return을 쓰면 밑에 있는 조건들을 신경쓰지 않는다
public static int 합구하기 (int max) {
		int sum = 0;
		for(int i=1; i<=max; ++i) {
		sum += i;
		}if(sum==30);
		return sum;
}
리턴타입 
메소드의 최종 결과값을 반환
리턴타입에는 데이터타입8개(int, double, float,long...)와 
클래스타입1개 (String)총9개
리터타입이없을때는 void로 표현

인자값=파라미터값
데이터타입8개(int, double, float,long...)와 
클래스타입1개 (String)총9개가 위치
인자값이 없을때는 ()빈괄호
***인자값(파라미터값)은 3개이하로 작성

접근지정자
public : 다른 클래스에서 호출가능
private : 내부클래스에만 호출가능
protected 
default

// 돈을 입력받고 만원 몇장인지 return
	// 단 만원 이하로 파라미터값이 오면 0리턴
	public static int 거스름돈 (int money) {
	int m = 10000;
	if(money < m) {
		return 0;
	}
	int result = money/m;
		return result;
	
	}
	public static void main(String[] args) {
		int money = 50000;
		int 만원몇장 = 거스름돈(money);
	System.out.println(만원몇장);

	}
	//재사용성과 코드의 간결 증가
if 로만 return을 하면 
무조건 return을 마지막 줄에 한번더 입력해야함
(커뮤터는 그 조건이 틀렸을지 모른다고 가정함)
if else로 하면 둘중하나는 실행하기 때문에
return을 마지막 줄에 입력안함
<접근지정자><리턴타입><메소드이름><인자값(파라미터값)>
public		int		  동사		int
private		double				double
protected	String				String
default		...
			void (없으면)

조건은 함수가 실행하기 전에 
조건을 충족시켜줘야한다
필터링이 먼저 실행되어야한다